/* Custom properties */
:root {
	--sd-black: oklch(0% 0 0deg);
	--sd-black-a-8: oklch(from var(--sd-black) l c h / 8%);
	--sd-gray-60: oklch(60% 0 0deg);
	--sd-gray-90: oklch(90% 0 0deg);
	--sd-gray-98: oklch(98% 0 0deg);
	--sd-white: oklch(100% 0 0deg);
	--sd-blue: oklch(50% 0.12 250deg);
	--sd-purple: oklch(50% 0.12 285deg);
	--sd-red: oklch(50% 0.18 20deg);
	--sd-yellow: oklch(75% 0.14 80deg);
}

@layer reset {
	/* Universal */
	* {
		box-sizing: border-box;
		line-height: calc(4px + 2ex);
	}

	/* Focus */
	:focus {
		outline: none;
		scroll-padding-block-end: 8vb;
	}

	:focus-visible {
		box-shadow: 0 0 0 1px var(--sd-white);
		outline: 2px solid var(--sd-black);
		outline-offset: 2px;
	}
}

@layer elements {
	/* Sectioning root */
	body {
		color: var(--sd-black);
		font-family: system-ui;
		font-size: 0.875rem;
		margin: 0;
		overscroll-behavior-y: none;
	}

	/* Inline text semantics */
	a {
		&:any-link {
			cursor: pointer;
			text-decoration: none;
		}

		&:hover {
			text-decoration: underline;
			text-decoration-thickness: max(0.08em, 1px);
			text-underline-offset: 0.15em;
		}

		&:link {
			color: var(--sd-blue);
		}

		&:visited {
			color: var(--sd-purple);
		}

		&:active {
			color: var(--sd-red);
		}
	}

	/* Forms */
	label {
		color: var(--sd-gray-60);
		display: flex;
		gap: 0.25rem;
		min-block-size: 2rem;
		padding-inline: 0.25rem;
		place-items: center;
	}

	input,
	select {
		border: 1px solid var(--sd-gray-90);
		border-radius: 2px;
	}
}

@layer custom-elements {
	stylelint-demo {
		background-color: var(--sd-white);
		block-size: 100dvb;
		display: grid;
		grid:
			'input-tabs' min-content
			'inputs' 1fr
			'output-tabs' min-content
			'outputs' max(10rem, 33vb);

		&:not(:has(input[data-radio-name='code']:checked)) sd-code,
		&:not(:has(input[data-radio-name='config']:checked)) sd-config,
		&:not(:has(input[data-radio-name='deps']:checked)) sd-deps {
			display: none !important;
		}

		&:not(:has(input[data-radio-name='warnings']:checked)) sd-warnings,
		&:not(:has(input[data-radio-name='console']:checked)) sd-console {
			display: none !important;
		}
	}

	sd-input-tabs,
	sd-output-tabs {
		display: flex;
		gap: 1px;
		inline-size: 100%;

		& input[type='radio'] {
			inline-size: 0;
			margin: 0;
			opacity: 0;
		}

		& label {
			color: var(--sd-gray-60);
			cursor: pointer;
			font-size: 0.75rem;
			letter-spacing: 0.01em;
			padding-block: 0.5rem;
			padding-inline: 1rem;
			text-transform: uppercase;

			&:has(input[type='radio']:hover) {
				color: var(--sd-black);
			}

			&:has(input[type='radio']:checked) {
				color: var(--sd-black);
			}
		}
	}

	sd-input-tabs {
		background-color: var(--sd-gray-98);

		& label {
			&:has(input[type='radio']:checked) {
				background-color: var(--sd-white);
			}
		}
	}

	sd-output-tabs {
		border-block-start: 1px solid var(--sd-gray-90);
		box-shadow: 0 2px 4px 0 var(--sd-black-a-8);

		& label {
			&:has(input[type='radio']:checked) {
				text-decoration: underline;
				text-underline-offset: 0.45em;
			}
		}
	}

	sd-code,
	sd-config,
	sd-deps {
		display: grid;
		grid-template-rows: min-content 1fr;
	}

	sd-deps {
		display: grid;
		grid:
			'deps-label deps-label' min-content
			'deps-monaco deps-installed' 1fr
			/ 1fr 1fr;

		& label {
			grid-area: deps-label;
		}

		& sd-deps-monaco {
			grid-area: deps-monaco;
		}

		& sd-deps-installed {
			grid-area: deps-installed;
			padding-inline: 0.5rem;
		}

		& ul {
			list-style: none;
			margin-block: unset;
			padding-inline-start: unset;
		}
	}

	sd-outputs {
		display: block;
	}

	sd-xterm-wrapper {
		block-size: 100%;
		display: block;
		overflow: hidden;
		position: relative;
	}

	sd-warnings,
	sd-console {
		block-size: 100%;
		display: block;
		font-family: monospace;
		font-size: 0.75rem;
		inline-size: 100%;
		overflow: auto;
		padding-block: 0.75rem;
		padding-inline: 0.5rem;
	}

	sd-warnings {
		container: warnings / inline-size;

		ul {
			display: grid;
			gap: 0.5rem 1rem;
			list-style: none;
			margin-block: unset;
			max-inline-size: max-content;
			padding-inline-start: unset;
			white-space: pre-wrap;

			&:empty {
				&::before {
					content: 'âœ… No problems!';
				}
			}

			& li {
				display: grid;
				grid-column: 1 / -1;
				grid-template-columns: subgrid;
				place-items: start;

				& span:first-child {
					color: gray;
					cursor: pointer;
				}

				& span[data-sd-severity] {
					color: var(--sd-white);
					flex-basis: 8ch;
					font-size: 0.6875rem;
					text-align: center;
					text-transform: uppercase;
				}

				& span[data-sd-severity='error'] {
					background-color: var(--sd-red);
				}

				& span[data-sd-severity='warning'] {
					background-color: var(--sd-yellow);
				}

				& span:nth-child(2) {
					padding-inline: 0.25rem;
				}
			}

			@container warnings (width > 40em) {
				grid-template-columns: max-content min-content 1fr max-content;
				row-gap: 0.25rem;
			}
		}
	}
}
